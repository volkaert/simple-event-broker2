server.port = 0
#server.port = 8084
spring.application.name = PulsarSubscriptionManager

eureka.instance.instance-id = ${spring.cloud.client.hostname}:${spring.application.name}:${server.port}:${random.value}
eureka.instance.leaseRenewalIntervalInSeconds = 5
eureka.instance.leaseExpirationDurationInSeconds = 10
eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka/
#eureka.client.healthcheck.enabled = true
eureka.client.registryFetchIntervalSeconds = 10
eureka.client.initialInstanceInfoReplicationIntervalSeconds = 30
eureka.client.instanceInfoReplicationIntervalSeconds = 10

spring.cloud.loadbalancer.ribbon.enabled = false

logging.level.fr.volkaert = DEBUG

# Useful for metrics (to group them by component type)
broker.component-type-name = PulsarSubscriptionManager

# Useful for metrics (to distinguish instances of the same component type)
broker.component-instance-id = ${eureka.instance.instance-id}
#broker.component-instance-id = ${broker.component-type-name}-localhost-${server.port}

broker.catalog-url = lb://Catalog
broker.auth-client-id-for-catalog = some-client-id-for-catalog
broker.auth-client-secret-for-catalog = some-client-secret-for-catalog

broker.pulsar-service-url = pulsar://localhost:6650
broker.pulsar-listener-thread-count = 25

broker.subscription-adapter-url = lb://StandardSubscriptionAdapter
#broker.subscription-adapter-url = http://localhost:8086
broker.auth-client-id-for-subscription-adapter = some-client-id-for-subscription-adapter
broker.auth-client-secret-for-subscription-adapter = some-client-secret-for-subscription-adapter

# Timeouts to connect and read the webhooks
broker.connect-timeout-in-seconds-for-subscription-adapter = 2
# Pay attention: the broker.read-timeout-in-seconds-for-subscription-adapter must LONGER than the broker.read-timeout-in-seconds-for-webhooks of the Subscription Adapter module
broker.read-timeout-in-seconds-for-subscription-adapter = 35

broker.default-time-to-live-in-seconds-for-webhook-connection-error = 864000
broker.default-time-to-live-in-seconds-for-webhook-read-timeout-error = 864000
broker.default-time-to-live-in-seconds-for-webhook-server5xx-error = 60
broker.default-time-to-live-in-seconds-for-webhook-client4xx-error = 60
broker.default-time-to-live-in-seconds-for-webhook-auth401or403-error = 60

# Graceful Shutdown (requires Spring Boot >= 2.3.x)
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=5s

# Actuator endpoints
management.endpoints.web.exposure.include=*

# Cluster size is the number of PulsarSubscriptionManager instances and Cluster index is the index of this
# PulsarSubscriptionManager instance within the cluster.
# Cluster index must  be ***UNIQUE*** within the cluster and must follow the sequence 0, 1... < Cluster size.
# The PulsarSubscriptionManager instance in charge of the management of an event is the instance that meets the
# criteria 'broker.cluster-index == (sum-of-the-ascii-codes-of-the-chars-of-event-type-code % broker.cluster-size)'.
# For a given event type, only one instance of PulsarSubscriptionManager will manage the events.
broker.cluster-size = 1
broker.cluster-index = 0

